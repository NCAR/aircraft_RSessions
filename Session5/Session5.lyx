#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamerWAC
\begin_preamble
\usetheme{WAC}
\setbeamertemplate{headline}{}
\setbeamertemplate{footline}[default]{}
\setbeamertemplate{navigation symbols}{}
%\setbeamercovered{transparent}
%\setbeamercovered{opaque}
\setbeamertemplate{enumerate subitem}{(\alph{enumii})}

% or ...

\setbeamercovered{transparent}
% or whatever (possibly just delete it)
\end_preamble
\use_default_options false
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setbeamercolor{normal text}{bg=yellow!10}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Copyright 2004 by Till Tantau <tantau@users.sourceforge.net>.
 
\end_layout

\begin_layout Plain Layout
In principle, this file can be redistributed and/or modified under the terms
 of the GNU Public License, version 2.
 However, this file is supposed to be a template to be modified for your
 own needs.
 For this reason, if you use this file as a template and not specifically
 distribute it as part of a another package/program, the author grants the
 extra permission to freely copy and modify this file as you see fit and
 even to delete this copyright notice.
 
\end_layout

\end_inset


\end_layout

\begin_layout Title
R Session 5
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Short Title
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, use only with long paper titles
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subtitle
Introduction to Plot Techniques
\end_layout

\begin_layout Author
William A.
 Cooper
\end_layout

\begin_layout Institute
Research Aviation Facility, Earth Observing Laboratory
\begin_inset Newline newline
\end_inset

National Center for Atmospheric Research
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
 
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

Department of Theoretical Philosophy
\begin_inset Newline newline
\end_inset

University of Elsewhere
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Use the 
\begin_inset Quotes eld
\end_inset

Institute mark
\begin_inset Quotes erd
\end_inset

 inset (
\family sans
Insert\SpecialChar \menuseparator
Custom Insets\SpecialChar \menuseparator
InstituteMark
\family default
) only if there are several affiliations.
\end_layout

\begin_layout Itemize
Keep it simple, no one is interested in your street address.
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Universities of Somewhere and Elsewhere
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, but mostly needed
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Date
Presentation on 11/12/2014
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Either use conference name or its abbreviation.
 
\end_layout

\begin_layout Itemize
Not really informative to the audience, more for people (including yourself)
 who are reading the slides online
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
CFP 2003
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, should be abbreviation of conference name
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you have a file called "institution-logo-filename.xxx", where xxx is a
 graphic format that can be processed by latex or pdflatex, resp., then you
 can add a logo by uncommenting the following:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
pgfdeclareimage[height=0.5cm]{institution-logo}{institution-logo-filename}
\end_layout

\begin_layout Plain Layout

%
\backslash
logo{
\backslash
pgfuseimage{institution-logo}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSubsection[]{%
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Outline
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\end_deeper
\begin_layout Section
Packages for Plotting
\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
SOME PACKAGES PROVIDING PLOTS:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Base graphics (in package graphics, always available)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Easy to construct basic plots; e.g.,
\end_layout

\begin_deeper
\begin_layout Itemize
histographs, bar charts, box-and-whisker, violin, ...
\end_layout

\begin_layout Itemize
scatterplots, caterpillar plots, density plots
\end_layout

\begin_layout Itemize
time series, line charts, ...
\end_layout

\end_deeper
\begin_layout Itemize
Often used for exploratory analysis
\end_layout

\end_deeper
\begin_layout AlertBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
ggplot2 (
\begin_inset Quotes eld
\end_inset

grammar of graphics
\begin_inset Quotes erd
\end_inset

):
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Often used for final-presentation plots
\end_layout

\begin_layout Itemize
Great flexibility and a structured approach
\end_layout

\begin_layout Itemize
Can duplicate base-graphics plot functions
\end_layout

\end_deeper
\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
lattice graphics
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
implementation of 
\begin_inset Quotes eld
\end_inset

trellis
\begin_inset Quotes erd
\end_inset

 graphics -- an alternate structured approach to generating plots, esp.
\begin_inset space ~
\end_inset

for exploratory analysis
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setlength{
\backslash
topsep}{0pt}
\end_layout

\begin_layout Plain Layout


\backslash
setlength{
\backslash
parskip}{0pt}
\end_layout

\begin_layout Plain Layout


\backslash
setlength{
\backslash
partopsep}{1pt}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<setup, include=FALSE>>=
\end_layout

\begin_layout Plain Layout

#render_sweave()
\end_layout

\begin_layout Plain Layout

opts_chunk$set(size="small")    #"small")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<preamble, echo=FALSE, include=FALSE>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

require(Ranadu, quietly = TRUE, warn.conflicts=FALSE)
\end_layout

\begin_layout Plain Layout

require(ggplot2)
\end_layout

\begin_layout Plain Layout

require(grid)
\end_layout

\begin_layout Plain Layout

library(knitr)
\end_layout

\begin_layout Plain Layout

require(ggthemes)
\end_layout

\begin_layout Plain Layout

opts_chunk$set(echo=FALSE, include=FALSE, fig.lp="fig:")
\end_layout

\begin_layout Plain Layout

opts_chunk$set(fig.width=5, fig.height=4, fig.pos="center", digits=4)
\end_layout

\begin_layout Plain Layout

hook1 <- function(x){ gsub("```
\backslash
n*```r*
\backslash
n*", "", x) } 
\end_layout

\begin_layout Plain Layout

hook2 <- function(x){ gsub("```
\backslash
n+```
\backslash
n", "", x) } 
\end_layout

\begin_layout Plain Layout

knit_hooks$set(document = hook2)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<initialization, echo=FALSE, include=FALSE>>=
\end_layout

\begin_layout Plain Layout

thisFileName <- "Session4"
\end_layout

\begin_layout Plain Layout

Directory <- DataDirectory ()
\end_layout

\begin_layout Plain Layout

Flight <- "rf01" 				
\end_layout

\begin_layout Plain Layout

Project = "DEEPWAVE"			 
\end_layout

\begin_layout Plain Layout

fname = sprintf("%s%s/%s%s.nc", Directory, Project, Project, Flight)
\end_layout

\begin_layout Plain Layout

Data <- getNetCDF (fname, standardVariables(c("THETA", "THETAP")))
\end_layout

\begin_layout Plain Layout

@		
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Section
Base graphics
\end_layout

\begin_layout Subsection
Standard routines
\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
BASE GRAPHICS (console ?hist, or 'hist' in RStudio-help)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<hist-example, echo=-1, include=TRUE, fig.show='hold', tidy=TRUE, tidy.opts=list(
width=55)>>=
\end_layout

\begin_layout Plain Layout

par(tcl=-0.4, mar=c(8,5,0,4))
\end_layout

\begin_layout Plain Layout

hist (Data$ATX[Data$TASX>130], breaks=40, xlab='ATX', xlim=c(-80,-40), main=NULL
, col='blue')
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
BASE GRAPHICS: line plot'
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot-example, echo=-1, include=TRUE, fig.show='hold', tidy=TRUE, tidy.opts=list(
width=50)>>=
\end_layout

\begin_layout Plain Layout

par(tcl=-0.4, mar=c(8,5,0,4))
\end_layout

\begin_layout Plain Layout

plot (Data$Time, Data$ATX, ylab='ATX', col='red', type='l', xlab='Time [UTC]',
 lwd=2)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
BASE GRAPHICS: scatterplot
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<points-example, echo=-1, include=TRUE, fig.show='hold', tidy=TRUE, tidy.opts=lis
t(width=50)>>=
\end_layout

\begin_layout Plain Layout

par(tcl=-0.4, mar=c(9,5,0,4))
\end_layout

\begin_layout Plain Layout

plot (Data$ATX, Data$PSXC, type='p', pch=20, log='y', xlab='ATX [deg C]',
 ylab='PSXC [hPa]', ylim=c(1000,100), col='darkgreen')
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
BASE GRAPHICS: multiple lines'
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<lines-example, echo=-1, include=TRUE, fig.show='hold', tidy=TRUE, tidy.opts=list
(width=55)>>=
\end_layout

\begin_layout Plain Layout

par(tcl=-0.4, mar=c(11,5,0,4))
\end_layout

\begin_layout Plain Layout

plot (Data$Time, Data$ATX, ylab='T or DP [deg C]', type='l', col='blue',
 ylim=c(-100,20), xlab='Time [UTC]')
\end_layout

\begin_layout Plain Layout

lines (Data$Time, Data$DPXC, col='red')
\end_layout

\begin_layout Plain Layout

legend ('top', legend=c('ATX', 'DPXC'), text.col=c('blue', 'red'))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
BASE GRAPHICS: adding structure with a data.frame'
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
5 cm
\end_layout

\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Consider using a data.frame to hold data for a plot:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
subset appropriately
\end_layout

\begin_layout Itemize
apply plot operations to this object
\end_layout

\begin_layout Itemize
optionally save for archiving
\end_layout

\begin_layout Itemize
example:
\end_layout

\end_deeper
\begin_layout Column
6 cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<df-data, echo=-1, include=TRUE, tidy=TRUE, tidy.opts=list(width=25)>>=
\end_layout

\begin_layout Plain Layout

par(tcl=-0.4, mar=c(5,4,0,2))
\end_layout

\begin_layout Plain Layout

r <- setRange (Data$Time, 60000,73000)
\end_layout

\begin_layout Plain Layout

Plot1Data <- Data[r, c("Time", "ATX")]
\end_layout

\begin_layout Plain Layout

plot (Plot1Data, type='l', col='blue', lwd=2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Subsection
Extension: plotWAC ( )
\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
BASE GRAPHICS: see 'plotWAC'
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
5.5 cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot-normal, echo=FALSE, include=TRUE>>=
\end_layout

\begin_layout Plain Layout

par(tcl=-0.4, mar=c(5,4,1,2))
\end_layout

\begin_layout Plain Layout

r <- setRange (Data$Time, 64000,71000)
\end_layout

\begin_layout Plain Layout

Plot1Data <- Data[r, c("Time", "ATX")]
\end_layout

\begin_layout Plain Layout

plot (Plot1Data, type='l')
\end_layout

\begin_layout Plain Layout

title("plot ()", cex=0.7)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Column
5.5 cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plotWAC, echo=FALSE, include=TRUE>>=
\end_layout

\begin_layout Plain Layout

par(tcl=-0.4, mar=c(5,4,1,2))
\end_layout

\begin_layout Plain Layout

plotWAC (Plot1Data)
\end_layout

\begin_layout Plain Layout

title ("plotWAC ()", cex=0.7)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Differences:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Some differences in time labels
\end_layout

\begin_layout Enumerate
Default line thickness lwd=2
\end_layout

\begin_layout Enumerate
Ticks inward and duplicated on opposite axis
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
BASE GRAPHICS: another 'plotWAC' feature:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
5.5 cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot-WAC-multiple, echo=TRUE, include=TRUE, tidy=TRUE, tidy.opts=list(width=25)
>>=
\end_layout

\begin_layout Plain Layout

r <- setRange (Data$Time, 61000,71000)
\end_layout

\begin_layout Plain Layout

Plot1Data <- Data[r, c("Time", "ATX", "DPXC", "WIC")]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Column
5.5 cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<plot-command-for-previous, echo=-1, include=TRUE, tidy=TRUE, tidy.opts=list(wid
th=20), size="tiny">>=
\end_layout

\begin_layout Plain Layout

par(tcl=-0.4, mar=c(5,4,1,2))
\end_layout

\begin_layout Plain Layout

plotWAC (Plot1Data, legend='right', ylim=c(-90,10))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Section
ggplot2
\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
REASONS TO CONSIDER ggplot:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Based on a structure called the 'Grammar of Graphics':
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
independent components assembled to final plot
\end_layout

\begin_layout Itemize
layers: encourages structured composition
\end_layout

\begin_layout Itemize
particularly useful for constructing original plots with, e.g., a layer representi
ng the result of a fit.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide+<2->
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Themes
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Can construct a theme representing the particular tailoring of the plot
 you favor.
\end_layout

\begin_layout Itemize
Just add the theme to the plot definition, optionally with further modifications
 for an individual use.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide+<3->
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout AlertBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Supports constructing some very nice plots, although with what seems extra
 work at first.
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
COMPONENTS OF A ggplot
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Items that can be added, usually via g <- g + item
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
An initial definition for the basis of the plot, usually resembling
\begin_inset Newline newline
\end_inset

'g <- ggplot (data=Data, aes(x=Time, y=ATX)', containing:
\end_layout

\begin_deeper
\begin_layout Enumerate
The data, often best specified as a data.frame
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

aesthetic mappings
\begin_inset Quotes erd
\end_inset

 -- e.g., which variables are mapped to the abscissa and to the ordinate
\end_layout

\end_deeper
\begin_layout Enumerate
'geom's -- data representations visible on the plot like lines, points,
 etc.
\end_layout

\begin_layout Enumerate
'stat's -- fits or creating sub-groups for further analysis as in a violin-plot
\end_layout

\begin_layout Enumerate
'scale's -- axes, colors, line-widths, symbol-types, ..., anything that helps
 retrieve an original datum from information on the plot.
\end_layout

\begin_layout Enumerate
'coord's: the mapping from the data values to the plot.
 linear or log, e.g.; the mapping itself, vs 'scale's like axes that represent
 the coords with items appearing on the graph.
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
CONSTRUCTING A SIMPLE ggplot:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ggplot-1, echo=TRUE, include=TRUE, tidy=TRUE, tidy.opts=list(width=75),
 fig.height=3, size='tiny'>>=
\end_layout

\begin_layout Plain Layout

D <- Data[setRange(Data$Time, 61900,71000), c("ATX", "PSXC")]
\end_layout

\begin_layout Plain Layout

ggplot (D, aes(ATX, PSXC)) + geom_path ()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
CONSTRUCTING A TAILORED ggplot:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ggplot-2, echo=FALSE, include=TRUE, tidy=TRUE, tidy.opts=list(width=75),
 fig.height=3, size='tiny'>>=
\end_layout

\begin_layout Plain Layout

D <- Data[setRange(Data$Time, 61900,71000), c("ATX", "PSXC", "DPXC", "THETA")]
\end_layout

\begin_layout Plain Layout

tr <- PotentialTemperature(800,0.)
\end_layout

\begin_layout Plain Layout

tre <- EquivalentPotentialTemperature (800, 0, MurphyKoop (0))
\end_layout

\begin_layout Plain Layout

CP <- SpecificHeats()
\end_layout

\begin_layout Plain Layout

RoverCP <- CP[3] / CP[1]
\end_layout

\begin_layout Plain Layout

dx <- 0:-80
\end_layout

\begin_layout Plain Layout

df <- data.frame (dfx=dx, dfy=3-CP[1]/CP[3]*log10(tr/(dx+273.15)))
\end_layout

\begin_layout Plain Layout

pp <- dx  # shortcut to allocating new variable
\end_layout

\begin_layout Plain Layout

PfromEPT <- function (.P, .thetaE, .T) {
\end_layout

\begin_layout Plain Layout

  e <- MurphyKoop (.T, .P)
\end_layout

\begin_layout Plain Layout

  r <- MixingRatio (e / .P)
\end_layout

\begin_layout Plain Layout

  lhv <- 2.501e6 - 2370.
 * .T
\end_layout

\begin_layout Plain Layout

# latent heat of vaporization, temp-dependent
\end_layout

\begin_layout Plain Layout

  expn=lhv * r / (CP[1] * (273.15 + .T))
\end_layout

\begin_layout Plain Layout

  return (.thetaE - (273.15+.T)*(1000/(.P-e))^RoverCP * exp(expn))
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

tt <- dx  
\end_layout

\begin_layout Plain Layout

for (i in 1:length(tt)) {
\end_layout

\begin_layout Plain Layout

  pp[i] <- nleqslv::nleqslv (500., PfromEPT, jac=NULL, tre, tt[i])$x
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

df2 <- data.frame (dfx=dx, dfy=log10(pp))
\end_layout

\begin_layout Plain Layout

ggplot (D, aes(ATX, log10(PSXC))) + scale_y_reverse (breaks=c(log10(1000),
 log10(800), log10(600), log10(400), log10(200)), labels=c("1000", "800",
 "600", "400", "200")) + geom_path (size=1.5, col='blue') +geom_path (aes
 (DPXC, log10(PSXC)), col='red', lwd=1.5) + ylab("PSXC") + geom_line (data=df,
 aes(x=dfx, y=dfy), col='darkorange', lwd=2, lty=2) + geom_line (data=df2,
 aes(x=dfx, y=dfy), col='darkgreen', lwd=1.5, lty=2) + theme_WAC ()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
HOW THIS FITS IN THE 
\begin_inset Quotes eld
\end_inset

SESSIONS
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout SummaryBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
The Plan:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Introduction to R and esp.
\begin_inset space ~
\end_inset

to RStudio
\end_layout

\begin_layout Enumerate
The data.frame and other variables
\end_layout

\begin_layout Enumerate
Basic math operations; vector operations
\end_layout

\begin_layout Enumerate
Packages, including 'Ranadu'
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
alert{
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Constructing plots
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Fit procedures; showing fits in plots and tables
\end_layout

\begin_layout Enumerate
Reproducible Analyses using R and knitr
\end_layout

\begin_layout Enumerate
Specific examples of application for RAF tasks
\end_layout

\end_deeper
\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Next: Fitting
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
linear fits: simple regression, parameterized fits, Deming fit
\end_layout

\begin_layout Itemize
non-linear fits: numerical methods
\end_layout

\begin_layout Itemize
maximum likelihood via R
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\end_body
\end_document
