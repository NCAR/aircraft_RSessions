#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usetheme{WAC}
\setbeamertemplate{headline}{}
\setbeamertemplate{footline}[default]{}
\setbeamertemplate{navigation symbols}{}
%\setbeamercovered{transparent}
%\setbeamercovered{opaque}
\setbeamertemplate{enumerate subitem}{(\alph{enumii})}
\end_preamble
\use_default_options false
\begin_modules
knitr
beamer-fragile
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\bullet 1 0 15 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setbeamercolor{normal text}{bg=yellow!10}
\end_layout

\end_inset


\end_layout

\begin_layout Title
Session 3: Basics of R
\end_layout

\begin_layout Subtitle
math operations; using variables
\end_layout

\begin_layout Author
Al Cooper 
\end_layout

\begin_layout Date
RAF Sessions on R and RStudio
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setlength{
\backslash
topsep}{0pt}
\end_layout

\begin_layout Plain Layout


\backslash
setlength{
\backslash
parskip}{0pt}
\end_layout

\begin_layout Plain Layout


\backslash
setlength{
\backslash
partopsep}{1pt}
\end_layout

\begin_layout Plain Layout

<<setup, include=FALSE>>=
\end_layout

\begin_layout Plain Layout

#render_sweave()
\end_layout

\begin_layout Plain Layout

opts_chunk$set(size="small")    #"small")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
R as a Calculator
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Block
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

Calculator-like operations
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Standard interactive R
\end_layout

\begin_layout Itemize
RStudio console provides some conveniences
\end_layout

\begin_layout Itemize
Can do some simple programming interactively
\end_layout

\end_deeper
\begin_layout ExampleBlock
\begin_inset ERT
status open

\begin_layout Plain Layout

{Example: Roll angle for a 4-min turn}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\frac{v^{2}}{r}=g\thinspace\tan\phi
\]

\end_inset


\begin_inset Formula 
\[
2\pi r=vT
\]

\end_inset


\begin_inset Formula 
\[
\phi=\arctan\left(\frac{2\pi v}{gT}\right)
\]

\end_inset


\end_layout

\end_deeper
\begin_layout ExampleBlock

\end_layout

\end_deeper
\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
In RStudio Console:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout

\end_layout

\end_inset

The Equation:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\phi=\arctan\left(\frac{2\pi v}{gT}\right)
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<formula-1, echo=TRUE, include=TRUE>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

TAS <- 200
\end_layout

\begin_layout Plain Layout

gravity <- 9.8
\end_layout

\begin_layout Plain Layout

atan (2 * pi * TAS / (gravity * 240)) * 180 / pi
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setbeamercolor{alerted text}{fg=darkblue}
\end_layout

\end_inset


\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Math Conventions
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
focus on what might seem different
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
5.5 cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
setbeamercolor{normal text}{fg=gray,bg=} 
\end_layout

\begin_layout Plain Layout


\backslash
setbeamercolor{alerted text}{fg=darkblue,bg=} 
\end_layout

\begin_layout Plain Layout


\backslash
usebeamercolor{normal text}
\end_layout

\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Operator precedence:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout

<1-|alert@1>>
\end_layout

\end_inset

:: $ [ ] PEU:(MD)(AS)
\begin_inset Newline newline
\end_inset


\begin_inset Quotes eld
\end_inset

1:5 * 2
\begin_inset Quotes erd
\end_inset

 : has precedence
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout

<2-|alert@2>
\end_layout

\end_inset

! (& &&) (| ||) xor
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout

<3-|alert@3>
\end_layout

\end_inset

& vectorized; 
\begin_inset Newline newline
\end_inset

&& single-valued, efficient
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
setbeamercolor{alerted text}{fg=orange}
\end_layout

\begin_layout Plain Layout


\backslash
setbeamercolor{normal text}{fg=gray,bg=}
\end_layout

\begin_layout Plain Layout


\backslash
visible<4->{
\end_layout

\end_inset


\end_layout

\begin_layout AlertBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Operators to note:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<4->
\backslash
textcolor<4>{darkblue}{
\end_layout

\end_inset

exponentiation: ^ (accepts **)
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<5->
\backslash
textcolor<5>{darkblue}{
\end_layout

\end_inset

modulus: %% (mention %x%)
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<6->
\backslash
textcolor<6>{darkblue}{
\end_layout

\end_inset

integer division: %/%
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<7->
\backslash
textcolor<7>{darkblue}{
\end_layout

\end_inset

define vector: c(...)
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<7->
\backslash
textcolor<7>{darkblue}{
\end_layout

\end_inset

test if element present: %in%
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<8->
\backslash
textcolor<8>{darkblue}{
\end_layout

\end_inset

equality test: '==', not '='
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<9->
\backslash
textcolor<9>{darkblue}{
\end_layout

\end_inset

missing: '+=', '++', etc.
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout AlertBlock
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Column
5.5 cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setbeamercolor{alerted text}{fg=gray}
\end_layout

\end_inset


\end_layout

\begin_layout AlertBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<1->
\end_layout

\begin_layout Plain Layout

<<ea>>=
\end_layout

\begin_layout Plain Layout

1:5 * 2 # 1:10 or 2,4,6...?
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<2->
\end_layout

\begin_layout Plain Layout

<<eb>>=
\end_layout

\begin_layout Plain Layout

T | F & F  # & has priority
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<5->
\end_layout

\begin_layout Plain Layout

<<ec>>=
\end_layout

\begin_layout Plain Layout

27 %% 6
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<6->
\end_layout

\begin_layout Plain Layout

<<ed>>=
\end_layout

\begin_layout Plain Layout

b <- 5.3 %/% 2.6; b
\end_layout

\begin_layout Plain Layout

is.integer(b); as.integer (b)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<7->
\end_layout

\begin_layout Plain Layout

<<ee>>=
\end_layout

\begin_layout Plain Layout

a <- c("alpha", "beta", "gamma")
\end_layout

\begin_layout Plain Layout

c("gamma", "eta") %in% a
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
VECTOR OPERATIONS
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
5.5 cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
setbeamercolor{normal text}{fg=gray,bg=} 
\end_layout

\begin_layout Plain Layout


\backslash
setbeamercolor{alerted text}{fg=darkblue,bg=} 
\end_layout

\begin_layout Plain Layout


\backslash
usebeamercolor{normal text}
\end_layout

\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Vector Arithmetic:
\end_layout

\end_inset


\end_layout

\begin_layout Block

\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout

<1-|alert@1>
\end_layout

\end_inset

Loops seldom needed:
\end_layout

\begin_deeper
\begin_layout Standard
Most functions work vectorized.
 Very useful; 
\begin_inset ERT
status open

\begin_layout Plain Layout

 {
\backslash
footnotesize cf.
\backslash
 Ranadu/R/AirTemperature.R}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout

<2-|alert@2>
\end_layout

\end_inset

If vector operations use different-length vectors, the shorter one will
 be recycled.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout

<3-|alert@3-4>
\end_layout

\end_inset

Logical tests are very useful:
\end_layout

\begin_deeper
\begin_layout Standard
As indices
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(vectors, data.frames)
\end_layout

\begin_layout Standard
To replace select values:
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
tiny 
\end_layout

\end_inset

Data[Data$TASX < 130, ] <- NA
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size footnotesize
E.g, print each 10 s in sequence
\size default
:
\begin_inset Newline newline
\end_inset


\size footnotesize

\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

a[a %% 10 == 0]
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Column
5.5 cm
\end_layout

\begin_layout Standard
R input and response:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<1-3>
\end_layout

\begin_layout Plain Layout

<<e2a, size='tiny'>>=
\end_layout

\begin_layout Plain Layout

a <- 1:10; a[1:5] <- a[6:10]; a
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<2-3>
\end_layout

\begin_layout Plain Layout

<<e2b, size='tiny'>>=
\end_layout

\begin_layout Plain Layout

2*a; a <- a + 1:2; print (a)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<3>
\end_layout

\begin_layout Plain Layout

<<e2c, size='tiny'>>=
\end_layout

\begin_layout Plain Layout

Data <- data.frame("Time"=1:4)
\end_layout

\begin_layout Plain Layout

Data["ATX"]=c(10.3, 10.6, 10.9, 11.2)
\end_layout

\begin_layout Plain Layout

Data["TASX"] <- c(131.3, 129.8, 132.9, 135.6)
\end_layout

\begin_layout Plain Layout

Valid <- (Data$TASX > 130.); Valid
\end_layout

\begin_layout Plain Layout

DataValid <- Data[Valid, ]; DataValid
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<4>
\backslash
vskip-4cm
\end_layout

\begin_layout Plain Layout

<<e2d, size='tiny'>>=
\end_layout

\begin_layout Plain Layout

a <- sin((x<-1:1200)*pi/40)  # period is 80 s
\end_layout

\begin_layout Plain Layout

r <- 1:1200%%90==0           # sample at 90 s
\end_layout

\begin_layout Plain Layout

plot(x,a,type='l', col='blue')
\end_layout

\begin_layout Plain Layout

lines(x[r],a[r], col='red')
\end_layout

\begin_layout Plain Layout

title("Classic Demonstration of Aliasing")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
USING VARIABLES
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
5.5 cm
\end_layout

\begin_layout Itemize
Variables can hold many things, allowing you to organize your work:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula $\blacktriangleright$
\end_inset

text, vectors, data-frames, arrays, matrices, lists, ...
\begin_inset Newline newline
\end_inset


\begin_inset Formula $\blacktriangleright$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textcolor<4>{darkblue}{
\end_layout

\end_inset

fit results
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $\blacktriangleright$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textcolor<5>{darkblue}{
\end_layout

\end_inset

plot characteristics
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Suggestion: Make use of this wherever possible
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula $\blacktriangleright$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textcolor<5>{darkblue}{
\end_layout

\end_inset

Create data-frames to hold data for plots.
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $\blacktriangleright$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textcolor<2>{darkblue}{
\end_layout

\end_inset

Include new variables in the relevant data-frames.
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $\blacktriangleright$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textcolor<4>{darkblue}{
\end_layout

\end_inset

When fitting, save the results in unique variables.
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Column
5.5 cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vskip-0.2in
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<2,4->
\end_layout

\end_inset

R input and response:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<2>
\end_layout

\begin_layout Plain Layout

<<fa, size='tiny',tidy=TRUE, tidy.opts=list(width=32), message=FALSE, warning=FAL
SE, echo=-1:-6, hold=TRUE, fig.height=6.5>>=
\end_layout

\begin_layout Plain Layout

require(Ranadu, quietly = TRUE, warn.conflicts=FALSE)
\end_layout

\begin_layout Plain Layout

Project <- "DEEPWAVE";Flight <- "rf15"
\end_layout

\begin_layout Plain Layout

fname <- sprintf("%s%s/%s%s.nc", 
\end_layout

\begin_layout Plain Layout

DataDirectory(), Project, Project, Flight)
\end_layout

\begin_layout Plain Layout

varNames <- c("GGALTB", "GGALT", "PALT", "DVALUE")
\end_layout

\begin_layout Plain Layout

fname
\end_layout

\begin_layout Plain Layout

Data <- getNetCDF(fname, varNames)
\end_layout

\begin_layout Plain Layout

Data["DV"] <- Data$GGALTB-Data$PALT
\end_layout

\begin_layout Plain Layout

names(Data)[2:6]
\end_layout

\begin_layout Plain Layout

mean(Data$GGALTB-Data$GGALT, na.rm=TRUE)
\end_layout

\begin_layout Plain Layout

sd  (Data$GGALTB-Data$GGALT, na.rm=TRUE)
\end_layout

\begin_layout Plain Layout

plot(Data$DV, Data$DVALUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<3>
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vskip-2.5in
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Exercise: Partition the data by GGQUAL
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout ExampleBlock
This will show that the difference for GGQUAL != 5 is much smaller.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<4>
\end_layout

\begin_layout Plain Layout


\backslash
vskip-1.8in
\end_layout

\begin_layout Plain Layout

<<fb, size='tiny'>>=
\end_layout

\begin_layout Plain Layout

fit1 <- lm (GGALTB ~ GGALT, data=Data)
\end_layout

\begin_layout Plain Layout

names(fit1)
\end_layout

\begin_layout Plain Layout

summary(fit1)
\end_layout

\begin_layout Plain Layout

coefficients(fit1)    #or summary(fit1)$coefficients
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onslide<5>
\end_layout

\begin_layout Plain Layout


\backslash
vskip-2.8in
\end_layout

\begin_layout Plain Layout

<<fc, size='tiny'>>=
\end_layout

\begin_layout Plain Layout

# nicer plot, using 'grammar of graphics'
\end_layout

\begin_layout Plain Layout

# 'g' will be container for plot characteristics
\end_layout

\begin_layout Plain Layout

require(ggplot2)
\end_layout

\begin_layout Plain Layout

g <- ggplot(data=Data, aes(x=GGALTB, y=GGALT))
\end_layout

\begin_layout Plain Layout

g <- g + geom_point(size=2, color='blue', shape=20)
\end_layout

\begin_layout Plain Layout

g <- g + theme_WAC()
\end_layout

\begin_layout Plain Layout

print(g)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
NEXT TIME: Guide to 'Ranadu'
\end_layout

\end_inset


\end_layout

\begin_layout Frame
Also:
\end_layout

\begin_deeper
\begin_layout Itemize
Review and catch-up
\end_layout

\begin_layout Itemize
Suggestions re 'style' and 'traps'
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\end_body
\end_document
