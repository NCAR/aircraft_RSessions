#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usetheme{WAC}
\setbeamertemplate{headline}{}
\setbeamertemplate{footline}[default]{}
\setbeamertemplate{navigation symbols}{}
%\setbeamercovered{transparent}
%\setbeamercovered{opaque}
\setbeamertemplate{enumerate subitem}{(\alph{enumii})}
\end_preamble
\use_default_options false
\begin_modules
knitr
beamer-fragile
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\bullet 1 0 15 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setbeamercolor{normal text}{bg=yellow!10}
\end_layout

\end_inset


\end_layout

\begin_layout Title
Session 4: R Packages
\end_layout

\begin_layout Subtitle
A sampler; also, 'Ranadu'
\end_layout

\begin_layout Author
Al Cooper 
\end_layout

\begin_layout Date
RAF Sessions on R and RStudio
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setlength{
\backslash
topsep}{0pt}
\end_layout

\begin_layout Plain Layout


\backslash
setlength{
\backslash
parskip}{0pt}
\end_layout

\begin_layout Plain Layout


\backslash
setlength{
\backslash
partopsep}{1pt}
\end_layout

\begin_layout Plain Layout

<<setup, include=FALSE>>=
\end_layout

\begin_layout Plain Layout

#render_sweave()
\end_layout

\begin_layout Plain Layout

opts_chunk$set(size="small")    #"small")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setbeamercolor{normal text}{fg=gray,bg=} 
\end_layout

\begin_layout Plain Layout


\backslash
setbeamercolor{alerted text}{fg=darkblue,bg=} 
\end_layout

\begin_layout Plain Layout


\backslash
usebeamercolor{normal text}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
What is a package?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

Base
\begin_inset Quotes erd
\end_inset

 functions
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Most of what we have been reviewing is in the base package
\end_layout

\begin_deeper
\begin_layout Standard
Always available, always loaded.
\end_layout

\end_deeper
\begin_layout Itemize
Many functions, like plot (), are in other standard packages like 'graphics'
\end_layout

\begin_layout Itemize
Want to see everything available on CRAN? 
\begin_inset Newline newline
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "See this CRAN URL"
target "http://cran.r-project.org/web/packages/available_packages_by_name.html"

\end_inset

; better starting point is 
\begin_inset CommandInset href
LatexCommand href
name "this URL"
target "http://cran.r-project.org/web/views/"

\end_inset


\end_layout

\end_deeper
\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
RStudio: see the 'Packages' button:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Most are inactive in the sense that they are not using memory or available.
 To use:
\end_layout

\begin_deeper
\begin_layout Enumerate
check the box;
\end_layout

\begin_layout Enumerate
require(signal) or library(ggplot2);
\end_layout

\begin_layout Enumerate
also beanplot::beanplot; often useful
\end_layout

\end_deeper
\begin_layout Enumerate
On tikal, all the standard EOL packages.
 Setting .Renviron appropriately gives you access to the packages of others.
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
A few to note:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout

\end_layout

\end_inset

Recently used:
\end_layout

\begin_deeper
\begin_layout Enumerate
ncdf: basic netCDF functions
\end_layout

\begin_layout Enumerate
ggplot2 and ggthemes
\end_layout

\begin_layout Enumerate
signal (includes filtering)
\end_layout

\begin_layout Enumerate
devtools: helpful constructing packages
\end_layout

\begin_layout Enumerate
nleqslv: solve non-linear equations
\end_layout

\begin_layout Enumerate
knitr: intermix text and R code
\end_layout

\begin_layout Enumerate
maps and mapproj
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setbeamercolor{alerted text}{fg=orange}
\end_layout

\end_inset


\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
'Ranadu'
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Data-access functions:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Data <- getNetCDF ( ): loads data.frame with requested variables
\begin_inset Newline newline
\end_inset

V <- standardVariables ( ): defines a comment set
\begin_inset Newline newline
\end_inset

DataDirectory ( ): 
\begin_inset Quotes eld
\end_inset

/scr/raf_data/
\begin_inset Quotes erd
\end_inset

 on tikal
\begin_inset Newline newline
\end_inset

i <- getIndex ( ): find index for a specified time
\begin_inset Newline newline
\end_inset

r <- setRange ( ): set a range of indices to a specified time interval
\begin_inset Newline newline
\end_inset

TellAbout (V): lists some characteristics of V
\end_layout

\end_deeper
\begin_layout AlertBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
R code and response:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ea, include=FALSE>>=
\end_layout

\begin_layout Plain Layout

require(Ranadu)
\end_layout

\begin_layout Plain Layout

<<eb, include=TRUE, size='footnotesize', tidy=TRUE, tidy.opts=list(width=55),
 comment=NA>>=
\end_layout

\begin_layout Plain Layout

Project <- "DEEPWAVE"
\end_layout

\begin_layout Plain Layout

Flight <- "rf15"
\end_layout

\begin_layout Plain Layout

fname <- sprintf ("%s%s/%s%s.nc", DataDirectory (), Project, Project, Flight)
 # or fname <- "..."
\end_layout

\begin_layout Plain Layout

Data <- getNetCDF (fname, standardVariables (c("GGALTB", "PITCH")), Start=40000,
 End=53000, F=15) # loads data.frame
\end_layout

\begin_layout Plain Layout

names(Data)  # shows variables in Data
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
'Ranadu'
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout AlertBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
R code and response:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ec, include=TRUE, size='footnotesize', comment=NA>>=
\end_layout

\begin_layout Plain Layout

TellAbout (Data)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
More about getNetCDF ( ):
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
The first variable returned is 
\begin_inset Quotes eld
\end_inset

Time
\begin_inset Quotes erd
\end_inset

.
 This is converted from the time variable used in netCDF files (seconds
 after a specified reference time) to 'POSIX'-format time that is understood
 by R.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Gives appropriate labels in plots vs time.
\end_layout

\begin_layout Enumerate
Includes date; no ambiguity if data.frames are merged.
\end_layout

\begin_layout Enumerate
Requires interpretation; not a simple index.
 This works:
\begin_inset Newline newline
\end_inset

Data$ATX[Data$Time==as.POSIXct("2014-07-04 08:33:19", tz='UTC'))
\begin_inset Newline newline
\end_inset

-- but see 'getIndex'
\end_layout

\end_deeper
\begin_layout Enumerate
Handles high-rate files by returning 25 values per second in flat arrays.
 Where variables are lower rate, interpolation is used, Savitzky-Golay with
 4th-order polynomials spanning 3 s centered on each 25-Hz point, so all
 are 25-Hz.
\end_layout

\begin_layout Enumerate
Data$RF is included to be able to merge resulting files and still identify
 data from individual flights: Data[RF==15, ] gives only measurements from
 that flight.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Other ways of getting data into R: tables
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
read.table () 
\end_layout

\begin_layout Itemize
Easy way to read data in text spreadsheet form:
\end_layout

\begin_deeper
\begin_layout Standard
export from Excel in CSV format
\end_layout

\begin_layout Standard
read.table with the same separator as the argument
\end_layout

\end_deeper
\begin_layout Itemize
other options include 'header' and 'skip'
\end_layout

\begin_layout Itemize
The 'file' argument can also be a complete URL.
 
\begin_inset CommandInset href
LatexCommand href
name "This URL"
target "'http://weather.uwyo.edu/cgi-bin/sounding?region=naconf&TYPE=TEXT%3ALIST&YEAR=2014&MONTH=11&FROM=0612&TO=0612&STNM=72469'"

\end_inset

 with the code below will download the current Denver sounding as a data.frame.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ed, include=FALSE>>=
\end_layout

\begin_layout Plain Layout

URL_UW <-  "http://weather.uwyo.edu/cgi-bin/sounding?region=naconf&TYPE=TEXT%3ALIS
T&YEAR=2014&MONTH=11&FROM=0612&TO=0612&STNM=72469"
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ee, include=TRUE, echo=TRUE, size='footnotesize'>>=
\end_layout

\begin_layout Plain Layout

Names <- read.table(file=URL_UW, skip=7, nrows=1)
\end_layout

\begin_layout Plain Layout

A <- read.table (file=URL_UW, skip=13, nrows=70,
\end_layout

\begin_layout Plain Layout

     col.names=as.vector(t(Names))); head(A)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Other ways of getting data into R: HTML pages
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
readHTMLTable(
\begin_inset CommandInset href
LatexCommand href
name "URL"
target "http://www3.rtd-denver.com/schedules/getSchedule.action?runboardId=143&routeId=228&routeType=11&direction=S-Bound&serviceType=3"

\end_inset

, ...)
\begin_inset Newline newline
\end_inset

Example: RTD schedule for route 228 southbound:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ef, include=FALSE>>=
\end_layout

\begin_layout Plain Layout

U <-  "http://www3.rtd-denver.com/schedules/getSchedule.action?runboardId=143&route
Id=228&routeType=11&direction=S-Bound&serviceType=3"
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eg, include=TRUE, echo=TRUE, size='footnotesize', tidy=TRUE, tidy.opts=list(wid
th=55), comment=NA>>=
\end_layout

\begin_layout Plain Layout

require (XML)
\end_layout

\begin_layout Plain Layout

Schedule <- readHTMLTable (U, header=FALSE, which=1, skip.rows=1:10)
\end_layout

\begin_layout Plain Layout

names (Schedule) <- c("Stop1", "2", "3", "4", "5", "6", "7", "(RAF)", "BPNR",
 " ")
\end_layout

\begin_layout Plain Layout

head(Schedule[ ,8:9],9)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Algorithm Functions
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Now available:
\end_layout

\end_inset


\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
5.8 cm
\end_layout

\begin_layout Standard
MurphyKoop (DP, P)
\end_layout

\begin_layout Standard
DPfromE (E)
\end_layout

\begin_layout Standard
MixingRatio
\end_layout

\begin_layout Standard
PotentialTemperature
\end_layout

\begin_layout Standard
EquivalentPotentialTemperature
\end_layout

\begin_layout Standard
WetEquivalentPotentialTemperature
\end_layout

\begin_layout Standard
VirtualTemperature
\end_layout

\begin_layout Standard
VirtualPotentialTemperature
\end_layout

\begin_layout Standard
MachNumber
\end_layout

\begin_layout Standard
TrueAirspeed
\end_layout

\begin_layout Standard
PCorFunction
\end_layout

\begin_layout Standard
KingProbe
\end_layout

\begin_layout Separator

\end_layout

\begin_layout Column
5.2 cm
\end_layout

\begin_layout Standard
AirTemperature
\end_layout

\begin_layout Standard
calcAttack
\end_layout

\begin_layout Standard
GV_AOAfromRadome
\end_layout

\end_deeper
\begin_layout Columns
GV_YawFromRadome
\end_layout

\begin_layout Columns
ButterworthFilter
\end_layout

\begin_deeper
\begin_layout Standard
ComplementaryFilter
\end_layout

\begin_layout Standard
Gravity
\end_layout

\begin_layout Standard
PressureAltitude
\end_layout

\begin_layout Standard
RecoveryFactor
\end_layout

\begin_layout Standard
SpecificHeats
\end_layout

\end_deeper
\begin_layout Columns
StandardConstant
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Convenience and Special Functions:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
5.5 cm
\end_layout

\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Now available:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
DataDirectory ( )
\end_layout

\begin_layout Standard
GetAttributes (V)
\end_layout

\begin_layout Standard
getIndex (Time, HHMMSS)
\end_layout

\begin_layout Standard
r <- setRange (Time, Start, End)
\end_layout

\begin_layout Standard
getRAFData ()
\end_layout

\begin_layout Standard
getStartEnd(Time)
\end_layout

\begin_layout Standard
ncsubset
\end_layout

\begin_layout Standard
TellAbout (V)
\end_layout

\begin_layout Standard
ValueOf ( )
\end_layout

\begin_layout Standard
ValueOfAll ( )
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout AlertBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Special (available):
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
DemingFit ( )
\end_layout

\begin_layout Standard
AdiabaticTandLWC ( )
\end_layout

\end_deeper
\begin_layout Column
5.5 cm
\end_layout

\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Plotting routines (available):
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
plotWAC ( )
\end_layout

\begin_layout Standard
lineWAC ( )
\end_layout

\begin_layout Standard
theme_WAC ( )
\end_layout

\begin_layout Standard
plotTrack ( )
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setbeamercolor{alerted text}{fg=red}
\end_layout

\end_inset


\end_layout

\begin_layout AlertBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Development projects:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
ggplotWAC ( )
\end_layout

\begin_layout Enumerate
size distributions: CDP etc.
\end_layout

\begin_layout Enumerate
Soundings: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Skew-T based on Davies-Jones pseudo-adiabatic lines
\end_layout

\begin_layout Enumerate
Paluch and Betts plots
\end_layout

\end_deeper
\begin_layout Enumerate
Spectral-analysis and autocorrelation functions
\end_layout

\end_deeper
\begin_layout AlertBlock

\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
NEXT TIME: Generating Figures
\end_layout

\end_inset


\end_layout

\begin_layout Frame

\end_layout

\begin_layout Separator

\end_layout

\end_body
\end_document
